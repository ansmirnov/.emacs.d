#+TITLE: Emacs Config
#+INFOJS_OPT: view:t toc:t ltoc:t mouse:underline buttons:0 path:https://www.linux.org.ru/tango/combined.css
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>

* README

This is my emacs configuration.

To install and try this:

1.  Remove or rename `~/.emacs.d` directory.

2.  Clone this repo in `~/.emacs.d`:

#+BEGIN_SRC 
git clone https://github.com/ansmirnov/.emacs.d.git ~/.emacs.d
#+END_SRC    
    
3. Enjoy.


* Emacs initialization

** Package system initialization

Add package archives:

#+begin_src emacs-lisp :tangle yes
  (require 'package)

  (setq package-archives '(
      ("gnu" . "https://elpa.gnu.org/packages/")
      ("melpa" . "https://melpa.org/packages/")
  ))

  (package-initialize)

  ;;(package-refresh-contents)
#+end_src

Install =use-package= if it not installed.

#+begin_src emacs-lisp :tangle yes
  (defun package-install-if-not (package)
    "Install PACKAGE if it's not installed yet."
    (unless (package-installed-p package)
    (package-refresh-contents)
    (package-install package)))

  (package-install-if-not 'use-package)

  (setq package-enable-at-startup nil)

  (eval-when-compile
    (require 'use-package))
  (put 'use-package 'lisp-indent-function 1)
  (setq use-package-always-ensure t)
#+end_src


* Global configuration


** Better defaults

Better defaults package breaks Ivy. I try to copy it code in my emacs config.

#+BEGIN_SRC emacs-lisp :tangle yes
(progn
  (menu-bar-mode -1)
  (when (fboundp 'tool-bar-mode)
    (tool-bar-mode -1))
  (when (fboundp 'scroll-bar-mode)
    (scroll-bar-mode -1))
  (when (fboundp 'horizontal-scroll-bar-mode)
    (horizontal-scroll-bar-mode -1))

  (autoload 'zap-up-to-char "misc"
    "Kill up to, but not including ARGth occurrence of CHAR." t)

  (require 'uniquify)
  (setq uniquify-buffer-name-style 'forward)

  (require 'saveplace)
  (setq-default save-place t)

  (global-set-key (kbd "M-/") 'hippie-expand)
  (global-set-key (kbd "C-x C-b") 'ibuffer)
  (global-set-key (kbd "M-z") 'zap-up-to-char)

  (global-set-key (kbd "C-s") 'isearch-forward-regexp)
  (global-set-key (kbd "C-r") 'isearch-backward-regexp)
  (global-set-key (kbd "C-M-s") 'isearch-forward)
  (global-set-key (kbd "C-M-r") 'isearch-backward)

  (show-paren-mode 1)
  (setq-default indent-tabs-mode nil)
  (setq save-interprogram-paste-before-kill t
        apropos-do-all t
        mouse-yank-at-point t
        require-final-newline t
        visible-bell t
        load-prefer-newer t
        ediff-window-setup-function 'ediff-setup-windows-plain
        save-place-file (concat user-emacs-directory "places")
        backup-directory-alist `(("." . ,(concat user-emacs-directory
                                                 "backups")))))

#+END_SRC


** Theme and appearance

I use [[https://github.com/bbatsov/zenburn-emacs][zenburn theme]]. I no change colors and other theme settings.

#+begin_src emacs-lisp :tangle yes
  (use-package zenburn-theme)
  (load-theme 'zenburn t)
#+end_src

I use Anonymous Pro font. Font size is 14.

#+begin_src emacs-lisp :tangle yes
  (add-to-list 'default-frame-alist '(font . "Anonymous Pro-14" ))
  (set-face-attribute 'default t :font "Anonymous Pro-14" )
#+end_src

Disable excess toolbar.

#+begin_src emacs-lisp :tangle yes
  (tool-bar-mode 0)
#+end_src

Lines below are draft.

;;  #+begin_src emacs-lisp :tangle yes
;;    (add-to-list 'default-frame-alist '(font . "DejaVu Sans Mono-13" ))
;;    (set-face-attribute 'default t :font "DejaVu Sans Mono-13" )
;;  #+end_src


** Key bindings

#+begin_src emacs-lisp :tangle yes
  (global-set-key (kbd "M-o") 'other-window)
  (global-set-key (kbd "C-c c") 'org-capture)
  (global-set-key [f2] 'save-buffer)
  (global-set-key [f3] 'find-file)
  (global-set-key [f8] 'kill-buffer-and-window) 
  (global-set-key [f12] 'shell) 
#+end_src


** Printing

I use emacs for printing.

This settings makes imprints beautiful.

#+begin_src emacs-lisp :tangle yes
  (setq lpr-switches '("-o cpi=11" "-o page-left=54"))
#+end_src


** Translate text using Google Translate

Use Google Translate for translate text from region.

#+begin_src emacs-lisp :tangle yes
  (use-package google-translate
    :defer t
    :commands 
    (google-translate-query-translate-reverse
            google-translate-query-translate
            google-translate-at-point
            google-translate-at-point-reverse)
         :init
           (setq google-translate-default-source-language "en")
           (setq google-translate-default-target-language "ru")
         :bind
           ("C-c t" . google-translate-at-point)
           ("C-c T" . google-translate-query-translate)
       )
   #+end_src


** Auto completion

#+begin_src emacs-lisp :tangle yes
  (use-package ivy
    :diminish ivy-mode
    :init
      ;; (setq ivy-re-builders-alist '((t . ivy--regex-fuzzy)))
      (ivy-mode t)
      (setq ivy-count-format "%d/%d ")
    :bind
      (("C-c C-r" . ivy-resume)))
#+end_src

Company mode for auto completion in any buffer.

#+begin_src emacs-lisp :tangle yes
  (use-package company
    :diminish company-mode
    :hook
    (after-init . global-company-mode))
#+end_src


** Projects

#+BEGIN_SRC emacs-lisp :tangle yes
;(use-package projectile
;  :config
;  (projectile-global-mode)
;  (setq projectile-enable-caching t)
;)
#+END_SRC


* Programming

** Common tools

Code for backlighting of pairwise brackets.

Electric pair mode will automatically add closing brackets.

#+begin_src emacs-lisp :tangle yes
  (show-paren-mode t) 
  (electric-pair-mode t)
#+end_src

Magit install.

#+begin_src emacs-lisp :tangle yes
  (use-package magit
    :bind 
  ("M-m" . magit) )
#+end_src

SSH install.

#+begin_src emacs-lisp :tangle yes
  (use-package ssh)
#+end_src

Flycheck install.

#+begin_src emacs-lisp :tangle yes
(use-package flycheck
  :ensure t
  :init
  (add-hook 'after-init-hook 'global-flycheck-mode)
)
#+end_src



** Python

(use-package python-mode)

** PHP

#+begin_src emacs-lisp :tangle yes
  (use-package php-mode)
#+end_src


* Documentation

Add markdown support.

#+begin_src emacs-lisp :tangle yes
  (use-package markdown-mode
    :ensure t
    :commands (markdown-mode gfm-mode)
    :mode (("README\\.md\\'" . gfm-mode)
      ("\\.md\\'" . markdown-mode)
      ("\\.markdown\\'" . markdown-mode))
    :init (setq markdown-command "multimarkdown"))
#+end_src





* Org mode

To fast adding code blocks in emacs config.

#+BEGIN_SRC emacs-lisp :tangle yes
  (add-to-list 'org-structure-template-alist
  (list "el" "#+BEGIN_SRC emacs-lisp :tangle yes\n?\n#+END_SRC" "<src lang=\"?\">\n\n</src>")
  )
#+END_SRC

(use-package ob-ipython)

#+BEGIN_SRC emacs-lisp :tangle yes
(org-babel-do-load-languages
 'org-babel-load-languages
 '((emacs-lisp . t)
   (python . t)
   (ipython . t)
   (sh . t)
))
#+END_SRC
